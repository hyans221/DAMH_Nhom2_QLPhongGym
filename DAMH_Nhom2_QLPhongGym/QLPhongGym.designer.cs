#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAMH_Nhom2_QLPhongGym
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLPhongGym")]
	public partial class QLPhongGymDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHD(ChiTietHD instance);
    partial void UpdateChiTietHD(ChiTietHD instance);
    partial void DeleteChiTietHD(ChiTietHD instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    partial void InsertDangKyHLV(DangKyHLV instance);
    partial void UpdateDangKyHLV(DangKyHLV instance);
    partial void DeleteDangKyHLV(DangKyHLV instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertGoiTap(GoiTap instance);
    partial void UpdateGoiTap(GoiTap instance);
    partial void DeleteGoiTap(GoiTap instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHoiVien(HoiVien instance);
    partial void UpdateHoiVien(HoiVien instance);
    partial void DeleteHoiVien(HoiVien instance);
    partial void InsertHuanLuyenVien(HuanLuyenVien instance);
    partial void UpdateHuanLuyenVien(HuanLuyenVien instance);
    partial void DeleteHuanLuyenVien(HuanLuyenVien instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLichHoc(LichHoc instance);
    partial void UpdateLichHoc(LichHoc instance);
    partial void DeleteLichHoc(LichHoc instance);
    partial void InsertLichSuBaoTri(LichSuBaoTri instance);
    partial void UpdateLichSuBaoTri(LichSuBaoTri instance);
    partial void DeleteLichSuBaoTri(LichSuBaoTri instance);
    partial void InsertLoaiDichVu(LoaiDichVu instance);
    partial void UpdateLoaiDichVu(LoaiDichVu instance);
    partial void DeleteLoaiDichVu(LoaiDichVu instance);
    partial void InsertLoaiHoaDon(LoaiHoaDon instance);
    partial void UpdateLoaiHoaDon(LoaiHoaDon instance);
    partial void DeleteLoaiHoaDon(LoaiHoaDon instance);
    partial void InsertLoaiKhachHang(LoaiKhachHang instance);
    partial void UpdateLoaiKhachHang(LoaiKhachHang instance);
    partial void DeleteLoaiKhachHang(LoaiKhachHang instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertPhongTap(PhongTap instance);
    partial void UpdatePhongTap(PhongTap instance);
    partial void DeletePhongTap(PhongTap instance);
    partial void InsertSuDungThietBi(SuDungThietBi instance);
    partial void UpdateSuDungThietBi(SuDungThietBi instance);
    partial void DeleteSuDungThietBi(SuDungThietBi instance);
    #endregion
		
		public QLPhongGymDataContext() : 
				base(global::DAMH_Nhom2_QLPhongGym.Properties.Settings.Default.QLPhongGymConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this.GetTable<ChiTietHD>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
		
		public System.Data.Linq.Table<DangKyHLV> DangKyHLVs
		{
			get
			{
				return this.GetTable<DangKyHLV>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<GoiTap> GoiTaps
		{
			get
			{
				return this.GetTable<GoiTap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HoiVien> HoiViens
		{
			get
			{
				return this.GetTable<HoiVien>();
			}
		}
		
		public System.Data.Linq.Table<HuanLuyenVien> HuanLuyenViens
		{
			get
			{
				return this.GetTable<HuanLuyenVien>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LichHoc> LichHocs
		{
			get
			{
				return this.GetTable<LichHoc>();
			}
		}
		
		public System.Data.Linq.Table<LichSuBaoTri> LichSuBaoTris
		{
			get
			{
				return this.GetTable<LichSuBaoTri>();
			}
		}
		
		public System.Data.Linq.Table<LoaiDichVu> LoaiDichVus
		{
			get
			{
				return this.GetTable<LoaiDichVu>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHoaDon> LoaiHoaDons
		{
			get
			{
				return this.GetTable<LoaiHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKhachHang> LoaiKhachHangs
		{
			get
			{
				return this.GetTable<LoaiKhachHang>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<PhongTap> PhongTaps
		{
			get
			{
				return this.GetTable<PhongTap>();
			}
		}
		
		public System.Data.Linq.Table<SuDungThietBi> SuDungThietBis
		{
			get
			{
				return this.GetTable<SuDungThietBi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHD")]
	public partial class ChiTietHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoaDonID;
		
		private int _GoiTapID;
		
		private EntityRef<GoiTap> _GoiTap;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoaDonIDChanging(int value);
    partial void OnHoaDonIDChanged();
    partial void OnGoiTapIDChanging(int value);
    partial void OnGoiTapIDChanged();
    #endregion
		
		public ChiTietHD()
		{
			this._GoiTap = default(EntityRef<GoiTap>);
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoaDonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HoaDonID
		{
			get
			{
				return this._HoaDonID;
			}
			set
			{
				if ((this._HoaDonID != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._HoaDonID = value;
					this.SendPropertyChanged("HoaDonID");
					this.OnHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					if (this._GoiTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_ChiTietHD", Storage="_GoiTap", ThisKey="GoiTapID", OtherKey="GoiTapID", IsForeignKey=true)]
		public GoiTap GoiTap
		{
			get
			{
				return this._GoiTap.Entity;
			}
			set
			{
				GoiTap previousValue = this._GoiTap.Entity;
				if (((previousValue != value) 
							|| (this._GoiTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoiTap.Entity = null;
						previousValue.ChiTietHDs.Remove(this);
					}
					this._GoiTap.Entity = value;
					if ((value != null))
					{
						value.ChiTietHDs.Add(this);
						this._GoiTapID = value.GoiTapID;
					}
					else
					{
						this._GoiTapID = default(int);
					}
					this.SendPropertyChanged("GoiTap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHD", Storage="_HoaDon", ThisKey="HoaDonID", OtherKey="HoaDonID", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHDs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHDs.Add(this);
						this._HoaDonID = value.HoaDonID;
					}
					else
					{
						this._HoaDonID = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private string _TenThietBi;
		
		private System.Nullable<int> _PhongTapID;
		
		private string _MoTa;
		
		private string _TrangThai;
		
		private EntitySet<LichSuBaoTri> _LichSuBaoTris;
		
		private EntitySet<SuDungThietBi> _SuDungThietBis;
		
		private EntityRef<PhongTap> _PhongTap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnTenThietBiChanging(string value);
    partial void OnTenThietBiChanged();
    partial void OnPhongTapIDChanging(System.Nullable<int> value);
    partial void OnPhongTapIDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public ThietBi()
		{
			this._LichSuBaoTris = new EntitySet<LichSuBaoTri>(new Action<LichSuBaoTri>(this.attach_LichSuBaoTris), new Action<LichSuBaoTri>(this.detach_LichSuBaoTris));
			this._SuDungThietBis = new EntitySet<SuDungThietBi>(new Action<SuDungThietBi>(this.attach_SuDungThietBis), new Action<SuDungThietBi>(this.detach_SuDungThietBis));
			this._PhongTap = default(EntityRef<PhongTap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThietBi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenThietBi
		{
			get
			{
				return this._TenThietBi;
			}
			set
			{
				if ((this._TenThietBi != value))
				{
					this.OnTenThietBiChanging(value);
					this.SendPropertyChanging();
					this._TenThietBi = value;
					this.SendPropertyChanged("TenThietBi");
					this.OnTenThietBiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", DbType="Int")]
		public System.Nullable<int> PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					if (this._PhongTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_LichSuBaoTri", Storage="_LichSuBaoTris", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<LichSuBaoTri> LichSuBaoTris
		{
			get
			{
				return this._LichSuBaoTris;
			}
			set
			{
				this._LichSuBaoTris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_SuDungThietBi", Storage="_SuDungThietBis", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<SuDungThietBi> SuDungThietBis
		{
			get
			{
				return this._SuDungThietBis;
			}
			set
			{
				this._SuDungThietBis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_ThietBi", Storage="_PhongTap", ThisKey="PhongTapID", OtherKey="PhongTapID", IsForeignKey=true)]
		public PhongTap PhongTap
		{
			get
			{
				return this._PhongTap.Entity;
			}
			set
			{
				PhongTap previousValue = this._PhongTap.Entity;
				if (((previousValue != value) 
							|| (this._PhongTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTap.Entity = null;
						previousValue.ThietBis.Remove(this);
					}
					this._PhongTap.Entity = value;
					if ((value != null))
					{
						value.ThietBis.Add(this);
						this._PhongTapID = value.PhongTapID;
					}
					else
					{
						this._PhongTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongTap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichSuBaoTris(LichSuBaoTri entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_LichSuBaoTris(LichSuBaoTri entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
		
		private void attach_SuDungThietBis(SuDungThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_SuDungThietBis(SuDungThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKyHLV")]
	public partial class DangKyHLV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DangKyHLV_ID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<int> _HLV_ID;
		
		private System.Nullable<int> _SoBuoi;
		
		private string _TrangThai;
		
		private EntityRef<HuanLuyenVien> _HuanLuyenVien;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDangKyHLV_IDChanging(int value);
    partial void OnDangKyHLV_IDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnHLV_IDChanging(System.Nullable<int> value);
    partial void OnHLV_IDChanged();
    partial void OnSoBuoiChanging(System.Nullable<int> value);
    partial void OnSoBuoiChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public DangKyHLV()
		{
			this._HuanLuyenVien = default(EntityRef<HuanLuyenVien>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangKyHLV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DangKyHLV_ID
		{
			get
			{
				return this._DangKyHLV_ID;
			}
			set
			{
				if ((this._DangKyHLV_ID != value))
				{
					this.OnDangKyHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._DangKyHLV_ID = value;
					this.SendPropertyChanged("DangKyHLV_ID");
					this.OnDangKyHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", DbType="Int")]
		public System.Nullable<int> HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					if (this._HuanLuyenVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBuoi", DbType="Int")]
		public System.Nullable<int> SoBuoi
		{
			get
			{
				return this._SoBuoi;
			}
			set
			{
				if ((this._SoBuoi != value))
				{
					this.OnSoBuoiChanging(value);
					this.SendPropertyChanging();
					this._SoBuoi = value;
					this.SendPropertyChanged("SoBuoi");
					this.OnSoBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_DangKyHLV", Storage="_HuanLuyenVien", ThisKey="HLV_ID", OtherKey="HLV_ID", IsForeignKey=true)]
		public HuanLuyenVien HuanLuyenVien
		{
			get
			{
				return this._HuanLuyenVien.Entity;
			}
			set
			{
				HuanLuyenVien previousValue = this._HuanLuyenVien.Entity;
				if (((previousValue != value) 
							|| (this._HuanLuyenVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HuanLuyenVien.Entity = null;
						previousValue.DangKyHLVs.Remove(this);
					}
					this._HuanLuyenVien.Entity = value;
					if ((value != null))
					{
						value.DangKyHLVs.Add(this);
						this._HLV_ID = value.HLV_ID;
					}
					else
					{
						this._HLV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HuanLuyenVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DangKyHLV", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DangKyHLVs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DangKyHLVs.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DichVuID;
		
		private string _TenDichVu;
		
		private string _MoTa;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDichVuIDChanging(int value);
    partial void OnDichVuIDChanged();
    partial void OnTenDichVuChanging(string value);
    partial void OnTenDichVuChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public DichVu()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichVuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DichVuID
		{
			get
			{
				return this._DichVuID;
			}
			set
			{
				if ((this._DichVuID != value))
				{
					this.OnDichVuIDChanging(value);
					this.SendPropertyChanging();
					this._DichVuID = value;
					this.SendPropertyChanged("DichVuID");
					this.OnDichVuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDichVu", DbType="NVarChar(100)")]
		public string TenDichVu
		{
			get
			{
				return this._TenDichVu;
			}
			set
			{
				if ((this._TenDichVu != value))
				{
					this.OnTenDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenDichVu = value;
					this.SendPropertyChanged("TenDichVu");
					this.OnTenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_KhachHang", Storage="_KhachHangs", ThisKey="DichVuID", OtherKey="DichVuID")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoiTap")]
	public partial class GoiTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoiTapID;
		
		private string _TenGoiTap;
		
		private EntitySet<ChiTietHD> _ChiTietHDs;
		
		private EntitySet<LoaiDichVu> _LoaiDichVus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoiTapIDChanging(int value);
    partial void OnGoiTapIDChanged();
    partial void OnTenGoiTapChanging(string value);
    partial void OnTenGoiTapChanged();
    #endregion
		
		public GoiTap()
		{
			this._ChiTietHDs = new EntitySet<ChiTietHD>(new Action<ChiTietHD>(this.attach_ChiTietHDs), new Action<ChiTietHD>(this.detach_ChiTietHDs));
			this._LoaiDichVus = new EntitySet<LoaiDichVu>(new Action<LoaiDichVu>(this.attach_LoaiDichVus), new Action<LoaiDichVu>(this.detach_LoaiDichVus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGoiTap", DbType="NVarChar(100)")]
		public string TenGoiTap
		{
			get
			{
				return this._TenGoiTap;
			}
			set
			{
				if ((this._TenGoiTap != value))
				{
					this.OnTenGoiTapChanging(value);
					this.SendPropertyChanging();
					this._TenGoiTap = value;
					this.SendPropertyChanged("TenGoiTap");
					this.OnTenGoiTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_ChiTietHD", Storage="_ChiTietHDs", ThisKey="GoiTapID", OtherKey="GoiTapID")]
		public EntitySet<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this._ChiTietHDs;
			}
			set
			{
				this._ChiTietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_LoaiDichVu", Storage="_LoaiDichVus", ThisKey="GoiTapID", OtherKey="GoiTapID")]
		public EntitySet<LoaiDichVu> LoaiDichVus
		{
			get
			{
				return this._LoaiDichVus;
			}
			set
			{
				this._LoaiDichVus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = this;
		}
		
		private void detach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = null;
		}
		
		private void attach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = this;
		}
		
		private void detach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoaDonID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<decimal> _GiaTien;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private System.Nullable<int> _LoaiHoaDon_ID;
		
		private EntitySet<ChiTietHD> _ChiTietHDs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LoaiHoaDon> _LoaiHoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoaDonIDChanging(int value);
    partial void OnHoaDonIDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnGiaTienChanging(System.Nullable<decimal> value);
    partial void OnGiaTienChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnLoaiHoaDon_IDChanging(System.Nullable<int> value);
    partial void OnLoaiHoaDon_IDChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHDs = new EntitySet<ChiTietHD>(new Action<ChiTietHD>(this.attach_ChiTietHDs), new Action<ChiTietHD>(this.detach_ChiTietHDs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LoaiHoaDon = default(EntityRef<LoaiHoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoaDonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HoaDonID
		{
			get
			{
				return this._HoaDonID;
			}
			set
			{
				if ((this._HoaDonID != value))
				{
					this.OnHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._HoaDonID = value;
					this.SendPropertyChanged("HoaDonID");
					this.OnHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHoaDon_ID", DbType="Int")]
		public System.Nullable<int> LoaiHoaDon_ID
		{
			get
			{
				return this._LoaiHoaDon_ID;
			}
			set
			{
				if ((this._LoaiHoaDon_ID != value))
				{
					if (this._LoaiHoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiHoaDon_IDChanging(value);
					this.SendPropertyChanging();
					this._LoaiHoaDon_ID = value;
					this.SendPropertyChanged("LoaiHoaDon_ID");
					this.OnLoaiHoaDon_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHD", Storage="_ChiTietHDs", ThisKey="HoaDonID", OtherKey="HoaDonID")]
		public EntitySet<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this._ChiTietHDs;
			}
			set
			{
				this._ChiTietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoaDon_HoaDon", Storage="_LoaiHoaDon", ThisKey="LoaiHoaDon_ID", OtherKey="LoaiHoaDonID", IsForeignKey=true)]
		public LoaiHoaDon LoaiHoaDon
		{
			get
			{
				return this._LoaiHoaDon.Entity;
			}
			set
			{
				LoaiHoaDon previousValue = this._LoaiHoaDon.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHoaDon.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._LoaiHoaDon.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._LoaiHoaDon_ID = value.LoaiHoaDonID;
					}
					else
					{
						this._LoaiHoaDon_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoiVien")]
	public partial class HoiVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoiVienID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private string _TrangThai;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoiVienIDChanging(int value);
    partial void OnHoiVienIDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public HoiVien()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoiVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HoiVienID
		{
			get
			{
				return this._HoiVienID;
			}
			set
			{
				if ((this._HoiVienID != value))
				{
					this.OnHoiVienIDChanging(value);
					this.SendPropertyChanging();
					this._HoiVienID = value;
					this.SendPropertyChanged("HoiVienID");
					this.OnHoiVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoiVien", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoiViens.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoiViens.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HuanLuyenVien")]
	public partial class HuanLuyenVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HLV_ID;
		
		private System.Nullable<int> _NhanVienID;
		
		private string _HoTen;
		
		private string _ChuyenMon;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<DangKyHLV> _DangKyHLVs;
		
		private EntitySet<LichHoc> _LichHocs;
		
		private EntitySet<LoaiDichVu> _LoaiDichVus;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHLV_IDChanging(int value);
    partial void OnHLV_IDChanged();
    partial void OnNhanVienIDChanging(System.Nullable<int> value);
    partial void OnNhanVienIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChuyenMonChanging(string value);
    partial void OnChuyenMonChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public HuanLuyenVien()
		{
			this._DangKyHLVs = new EntitySet<DangKyHLV>(new Action<DangKyHLV>(this.attach_DangKyHLVs), new Action<DangKyHLV>(this.detach_DangKyHLVs));
			this._LichHocs = new EntitySet<LichHoc>(new Action<LichHoc>(this.attach_LichHocs), new Action<LichHoc>(this.detach_LichHocs));
			this._LoaiDichVus = new EntitySet<LoaiDichVu>(new Action<LoaiDichVu>(this.attach_LoaiDichVus), new Action<LoaiDichVu>(this.detach_LoaiDichVus));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="Int")]
		public System.Nullable<int> NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuyenMon", DbType="NVarChar(100)")]
		public string ChuyenMon
		{
			get
			{
				return this._ChuyenMon;
			}
			set
			{
				if ((this._ChuyenMon != value))
				{
					this.OnChuyenMonChanging(value);
					this.SendPropertyChanging();
					this._ChuyenMon = value;
					this.SendPropertyChanged("ChuyenMon");
					this.OnChuyenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_DangKyHLV", Storage="_DangKyHLVs", ThisKey="HLV_ID", OtherKey="HLV_ID")]
		public EntitySet<DangKyHLV> DangKyHLVs
		{
			get
			{
				return this._DangKyHLVs;
			}
			set
			{
				this._DangKyHLVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LichHoc", Storage="_LichHocs", ThisKey="HLV_ID", OtherKey="HLV_ID")]
		public EntitySet<LichHoc> LichHocs
		{
			get
			{
				return this._LichHocs;
			}
			set
			{
				this._LichHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LoaiDichVu", Storage="_LoaiDichVus", ThisKey="HLV_ID", OtherKey="HLV_ID")]
		public EntitySet<LoaiDichVu> LoaiDichVus
		{
			get
			{
				return this._LoaiDichVus;
			}
			set
			{
				this._LoaiDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HuanLuyenVien", Storage="_NhanVien", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HuanLuyenViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HuanLuyenViens.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHLVs(DangKyHLV entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = this;
		}
		
		private void detach_DangKyHLVs(DangKyHLV entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = null;
		}
		
		private void attach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = this;
		}
		
		private void detach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = null;
		}
		
		private void attach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = this;
		}
		
		private void detach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhachHangID;
		
		private System.Nullable<int> _LoaiKhachHangID;
		
		private System.Nullable<int> _DichVuID;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _DiaChi;
		
		private EntitySet<DangKyHLV> _DangKyHLVs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HoiVien> _HoiViens;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<LoaiKhachHang> _LoaiKhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhachHangIDChanging(int value);
    partial void OnKhachHangIDChanged();
    partial void OnLoaiKhachHangIDChanging(System.Nullable<int> value);
    partial void OnLoaiKhachHangIDChanged();
    partial void OnDichVuIDChanging(System.Nullable<int> value);
    partial void OnDichVuIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._DangKyHLVs = new EntitySet<DangKyHLV>(new Action<DangKyHLV>(this.attach_DangKyHLVs), new Action<DangKyHLV>(this.detach_DangKyHLVs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HoiViens = new EntitySet<HoiVien>(new Action<HoiVien>(this.attach_HoiViens), new Action<HoiVien>(this.detach_HoiViens));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._DichVu = default(EntityRef<DichVu>);
			this._LoaiKhachHang = default(EntityRef<LoaiKhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKhachHangID", DbType="Int")]
		public System.Nullable<int> LoaiKhachHangID
		{
			get
			{
				return this._LoaiKhachHangID;
			}
			set
			{
				if ((this._LoaiKhachHangID != value))
				{
					if (this._LoaiKhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiKhachHangID = value;
					this.SendPropertyChanged("LoaiKhachHangID");
					this.OnLoaiKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichVuID", DbType="Int")]
		public System.Nullable<int> DichVuID
		{
			get
			{
				return this._DichVuID;
			}
			set
			{
				if ((this._DichVuID != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDichVuIDChanging(value);
					this.SendPropertyChanging();
					this._DichVuID = value;
					this.SendPropertyChanged("DichVuID");
					this.OnDichVuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DangKyHLV", Storage="_DangKyHLVs", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<DangKyHLV> DangKyHLVs
		{
			get
			{
				return this._DangKyHLVs;
			}
			set
			{
				this._DangKyHLVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoiVien", Storage="_HoiViens", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<HoiVien> HoiViens
		{
			get
			{
				return this._HoiViens;
			}
			set
			{
				this._HoiViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_PhanHois", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_KhachHang", Storage="_DichVu", ThisKey="DichVuID", OtherKey="DichVuID", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._DichVuID = value.DichVuID;
					}
					else
					{
						this._DichVuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKhachHang_KhachHang", Storage="_LoaiKhachHang", ThisKey="LoaiKhachHangID", OtherKey="LoaiKhachHangID", IsForeignKey=true)]
		public LoaiKhachHang LoaiKhachHang
		{
			get
			{
				return this._LoaiKhachHang.Entity;
			}
			set
			{
				LoaiKhachHang previousValue = this._LoaiKhachHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKhachHang.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._LoaiKhachHang.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._LoaiKhachHangID = value.LoaiKhachHangID;
					}
					else
					{
						this._LoaiKhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiKhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHLVs(DangKyHLV entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DangKyHLVs(DangKyHLV entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoiViens(HoiVien entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoiViens(HoiVien entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichHoc")]
	public partial class LichHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LichHocID;
		
		private System.Nullable<int> _HLV_ID;
		
		private System.Nullable<int> _PhongTapID;
		
		private System.Nullable<System.DateTime> _NgayHoc;
		
		private System.Nullable<System.TimeSpan> _ThoiGianBatDau;
		
		private System.Nullable<System.TimeSpan> _ThoiGianKetThuc;
		
		private EntityRef<HuanLuyenVien> _HuanLuyenVien;
		
		private EntityRef<PhongTap> _PhongTap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLichHocIDChanging(int value);
    partial void OnLichHocIDChanged();
    partial void OnHLV_IDChanging(System.Nullable<int> value);
    partial void OnHLV_IDChanged();
    partial void OnPhongTapIDChanging(System.Nullable<int> value);
    partial void OnPhongTapIDChanged();
    partial void OnNgayHocChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHocChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public LichHoc()
		{
			this._HuanLuyenVien = default(EntityRef<HuanLuyenVien>);
			this._PhongTap = default(EntityRef<PhongTap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichHocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LichHocID
		{
			get
			{
				return this._LichHocID;
			}
			set
			{
				if ((this._LichHocID != value))
				{
					this.OnLichHocIDChanging(value);
					this.SendPropertyChanging();
					this._LichHocID = value;
					this.SendPropertyChanged("LichHocID");
					this.OnLichHocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", DbType="Int")]
		public System.Nullable<int> HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					if (this._HuanLuyenVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", DbType="Int")]
		public System.Nullable<int> PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					if (this._PhongTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHoc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHoc
		{
			get
			{
				return this._NgayHoc;
			}
			set
			{
				if ((this._NgayHoc != value))
				{
					this.OnNgayHocChanging(value);
					this.SendPropertyChanging();
					this._NgayHoc = value;
					this.SendPropertyChanged("NgayHoc");
					this.OnNgayHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LichHoc", Storage="_HuanLuyenVien", ThisKey="HLV_ID", OtherKey="HLV_ID", IsForeignKey=true)]
		public HuanLuyenVien HuanLuyenVien
		{
			get
			{
				return this._HuanLuyenVien.Entity;
			}
			set
			{
				HuanLuyenVien previousValue = this._HuanLuyenVien.Entity;
				if (((previousValue != value) 
							|| (this._HuanLuyenVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HuanLuyenVien.Entity = null;
						previousValue.LichHocs.Remove(this);
					}
					this._HuanLuyenVien.Entity = value;
					if ((value != null))
					{
						value.LichHocs.Add(this);
						this._HLV_ID = value.HLV_ID;
					}
					else
					{
						this._HLV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HuanLuyenVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_LichHoc", Storage="_PhongTap", ThisKey="PhongTapID", OtherKey="PhongTapID", IsForeignKey=true)]
		public PhongTap PhongTap
		{
			get
			{
				return this._PhongTap.Entity;
			}
			set
			{
				PhongTap previousValue = this._PhongTap.Entity;
				if (((previousValue != value) 
							|| (this._PhongTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTap.Entity = null;
						previousValue.LichHocs.Remove(this);
					}
					this._PhongTap.Entity = value;
					if ((value != null))
					{
						value.LichHocs.Add(this);
						this._PhongTapID = value.PhongTapID;
					}
					else
					{
						this._PhongTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongTap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuBaoTri")]
	public partial class LichSuBaoTri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BaoTriID;
		
		private System.Nullable<int> _ThietBiID;
		
		private System.Nullable<System.DateTime> _NgayBaoTri;
		
		private string _MoTa;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaoTriIDChanging(int value);
    partial void OnBaoTriIDChanged();
    partial void OnThietBiIDChanging(System.Nullable<int> value);
    partial void OnThietBiIDChanged();
    partial void OnNgayBaoTriChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBaoTriChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LichSuBaoTri()
		{
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoTriID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BaoTriID
		{
			get
			{
				return this._BaoTriID;
			}
			set
			{
				if ((this._BaoTriID != value))
				{
					this.OnBaoTriIDChanging(value);
					this.SendPropertyChanging();
					this._BaoTriID = value;
					this.SendPropertyChanged("BaoTriID");
					this.OnBaoTriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", DbType="Int")]
		public System.Nullable<int> ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBaoTri", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBaoTri
		{
			get
			{
				return this._NgayBaoTri;
			}
			set
			{
				if ((this._NgayBaoTri != value))
				{
					this.OnNgayBaoTriChanging(value);
					this.SendPropertyChanging();
					this._NgayBaoTri = value;
					this.SendPropertyChanged("NgayBaoTri");
					this.OnNgayBaoTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_LichSuBaoTri", Storage="_ThietBi", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.LichSuBaoTris.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.LichSuBaoTris.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiDichVu")]
	public partial class LoaiDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiDichVu;
		
		private string _TenLoaiDichVu;
		
		private System.Nullable<int> _HLV_ID;
		
		private System.Nullable<int> _GoiTapID;
		
		private string _MoTa;
		
		private EntityRef<GoiTap> _GoiTap;
		
		private EntityRef<HuanLuyenVien> _HuanLuyenVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDichVuChanging(int value);
    partial void OnMaLoaiDichVuChanged();
    partial void OnTenLoaiDichVuChanging(string value);
    partial void OnTenLoaiDichVuChanged();
    partial void OnHLV_IDChanging(System.Nullable<int> value);
    partial void OnHLV_IDChanged();
    partial void OnGoiTapIDChanging(System.Nullable<int> value);
    partial void OnGoiTapIDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LoaiDichVu()
		{
			this._GoiTap = default(EntityRef<GoiTap>);
			this._HuanLuyenVien = default(EntityRef<HuanLuyenVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDichVu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiDichVu
		{
			get
			{
				return this._MaLoaiDichVu;
			}
			set
			{
				if ((this._MaLoaiDichVu != value))
				{
					this.OnMaLoaiDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDichVu = value;
					this.SendPropertyChanged("MaLoaiDichVu");
					this.OnMaLoaiDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDichVu", DbType="NVarChar(100)")]
		public string TenLoaiDichVu
		{
			get
			{
				return this._TenLoaiDichVu;
			}
			set
			{
				if ((this._TenLoaiDichVu != value))
				{
					this.OnTenLoaiDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDichVu = value;
					this.SendPropertyChanged("TenLoaiDichVu");
					this.OnTenLoaiDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", DbType="Int")]
		public System.Nullable<int> HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					if (this._HuanLuyenVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", DbType="Int")]
		public System.Nullable<int> GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					if (this._GoiTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_LoaiDichVu", Storage="_GoiTap", ThisKey="GoiTapID", OtherKey="GoiTapID", IsForeignKey=true)]
		public GoiTap GoiTap
		{
			get
			{
				return this._GoiTap.Entity;
			}
			set
			{
				GoiTap previousValue = this._GoiTap.Entity;
				if (((previousValue != value) 
							|| (this._GoiTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoiTap.Entity = null;
						previousValue.LoaiDichVus.Remove(this);
					}
					this._GoiTap.Entity = value;
					if ((value != null))
					{
						value.LoaiDichVus.Add(this);
						this._GoiTapID = value.GoiTapID;
					}
					else
					{
						this._GoiTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GoiTap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LoaiDichVu", Storage="_HuanLuyenVien", ThisKey="HLV_ID", OtherKey="HLV_ID", IsForeignKey=true)]
		public HuanLuyenVien HuanLuyenVien
		{
			get
			{
				return this._HuanLuyenVien.Entity;
			}
			set
			{
				HuanLuyenVien previousValue = this._HuanLuyenVien.Entity;
				if (((previousValue != value) 
							|| (this._HuanLuyenVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HuanLuyenVien.Entity = null;
						previousValue.LoaiDichVus.Remove(this);
					}
					this._HuanLuyenVien.Entity = value;
					if ((value != null))
					{
						value.LoaiDichVus.Add(this);
						this._HLV_ID = value.HLV_ID;
					}
					else
					{
						this._HLV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HuanLuyenVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHoaDon")]
	public partial class LoaiHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiHoaDonID;
		
		private string _TenLoaiHD;
		
		private string _MoTa;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiHoaDonIDChanging(int value);
    partial void OnLoaiHoaDonIDChanged();
    partial void OnTenLoaiHDChanging(string value);
    partial void OnTenLoaiHDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LoaiHoaDon()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHoaDonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiHoaDonID
		{
			get
			{
				return this._LoaiHoaDonID;
			}
			set
			{
				if ((this._LoaiHoaDonID != value))
				{
					this.OnLoaiHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiHoaDonID = value;
					this.SendPropertyChanged("LoaiHoaDonID");
					this.OnLoaiHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiHD", DbType="NVarChar(100)")]
		public string TenLoaiHD
		{
			get
			{
				return this._TenLoaiHD;
			}
			set
			{
				if ((this._TenLoaiHD != value))
				{
					this.OnTenLoaiHDChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiHD = value;
					this.SendPropertyChanged("TenLoaiHD");
					this.OnTenLoaiHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoaDon_HoaDon", Storage="_HoaDons", ThisKey="LoaiHoaDonID", OtherKey="LoaiHoaDon_ID")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoaDon = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKhachHang")]
	public partial class LoaiKhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiKhachHangID;
		
		private string _TenLoai;
		
		private string _MoTa;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiKhachHangIDChanging(int value);
    partial void OnLoaiKhachHangIDChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LoaiKhachHang()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKhachHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiKhachHangID
		{
			get
			{
				return this._LoaiKhachHangID;
			}
			set
			{
				if ((this._LoaiKhachHangID != value))
				{
					this.OnLoaiKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiKhachHangID = value;
					this.SendPropertyChanged("LoaiKhachHangID");
					this.OnLoaiKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKhachHang_KhachHang", Storage="_KhachHangs", ThisKey="LoaiKhachHangID", OtherKey="LoaiKhachHangID")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKhachHang = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhanVienID;
		
		private string _HoTen;
		
		private string _ChucVu;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _NgayVaoLam;
		
		private EntitySet<HuanLuyenVien> _HuanLuyenViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(int value);
    partial void OnNhanVienIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayVaoLamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVaoLamChanged();
    #endregion
		
		public NhanVien()
		{
			this._HuanLuyenViens = new EntitySet<HuanLuyenVien>(new Action<HuanLuyenVien>(this.attach_HuanLuyenViens), new Action<HuanLuyenVien>(this.detach_HuanLuyenViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVaoLam", DbType="Date")]
		public System.Nullable<System.DateTime> NgayVaoLam
		{
			get
			{
				return this._NgayVaoLam;
			}
			set
			{
				if ((this._NgayVaoLam != value))
				{
					this.OnNgayVaoLamChanging(value);
					this.SendPropertyChanging();
					this._NgayVaoLam = value;
					this.SendPropertyChanged("NgayVaoLam");
					this.OnNgayVaoLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HuanLuyenVien", Storage="_HuanLuyenViens", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<HuanLuyenVien> HuanLuyenViens
		{
			get
			{
				return this._HuanLuyenViens;
			}
			set
			{
				this._HuanLuyenViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HuanLuyenViens(HuanLuyenVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HuanLuyenViens(HuanLuyenVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhanHoiID;
		
		private System.Nullable<int> _KhachHangID;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayPhanHoi;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhanHoiIDChanging(int value);
    partial void OnPhanHoiIDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayPhanHoiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhanHoiChanged();
    #endregion
		
		public PhanHoi()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhanHoiID
		{
			get
			{
				return this._PhanHoiID;
			}
			set
			{
				if ((this._PhanHoiID != value))
				{
					this.OnPhanHoiIDChanging(value);
					this.SendPropertyChanging();
					this._PhanHoiID = value;
					this.SendPropertyChanged("PhanHoiID");
					this.OnPhanHoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhanHoi", DbType="Date")]
		public System.Nullable<System.DateTime> NgayPhanHoi
		{
			get
			{
				return this._NgayPhanHoi;
			}
			set
			{
				if ((this._NgayPhanHoi != value))
				{
					this.OnNgayPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayPhanHoi = value;
					this.SendPropertyChanged("NgayPhanHoi");
					this.OnNgayPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongTap")]
	public partial class PhongTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhongTapID;
		
		private string _TenPhong;
		
		private string _MoTa;
		
		private EntitySet<ThietBi> _ThietBis;
		
		private EntitySet<LichHoc> _LichHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhongTapIDChanging(int value);
    partial void OnPhongTapIDChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public PhongTap()
		{
			this._ThietBis = new EntitySet<ThietBi>(new Action<ThietBi>(this.attach_ThietBis), new Action<ThietBi>(this.detach_ThietBis));
			this._LichHocs = new EntitySet<LichHoc>(new Action<LichHoc>(this.attach_LichHocs), new Action<LichHoc>(this.detach_LichHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(100)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_ThietBi", Storage="_ThietBis", ThisKey="PhongTapID", OtherKey="PhongTapID")]
		public EntitySet<ThietBi> ThietBis
		{
			get
			{
				return this._ThietBis;
			}
			set
			{
				this._ThietBis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_LichHoc", Storage="_LichHocs", ThisKey="PhongTapID", OtherKey="PhongTapID")]
		public EntitySet<LichHoc> LichHocs
		{
			get
			{
				return this._LichHocs;
			}
			set
			{
				this._LichHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = this;
		}
		
		private void detach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = null;
		}
		
		private void attach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = this;
		}
		
		private void detach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuDungThietBi")]
	public partial class SuDungThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuDungID;
		
		private System.Nullable<int> _ThietBiID;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuDungIDChanging(int value);
    partial void OnSuDungIDChanged();
    partial void OnThietBiIDChanging(System.Nullable<int> value);
    partial void OnThietBiIDChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public SuDungThietBi()
		{
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuDungID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SuDungID
		{
			get
			{
				return this._SuDungID;
			}
			set
			{
				if ((this._SuDungID != value))
				{
					this.OnSuDungIDChanging(value);
					this.SendPropertyChanging();
					this._SuDungID = value;
					this.SendPropertyChanged("SuDungID");
					this.OnSuDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", DbType="Int")]
		public System.Nullable<int> ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_SuDungThietBi", Storage="_ThietBi", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.SuDungThietBis.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.SuDungThietBis.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
