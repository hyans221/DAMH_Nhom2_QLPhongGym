#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAMH_Nhom2_QLPhongGym
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLPhongGym")]
	public partial class QLPhongGymDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHD(ChiTietHD instance);
    partial void UpdateChiTietHD(ChiTietHD instance);
    partial void DeleteChiTietHD(ChiTietHD instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    partial void InsertDangKyLichTap(DangKyLichTap instance);
    partial void UpdateDangKyLichTap(DangKyLichTap instance);
    partial void DeleteDangKyLichTap(DangKyLichTap instance);
    partial void InsertGoiTap(GoiTap instance);
    partial void UpdateGoiTap(GoiTap instance);
    partial void DeleteGoiTap(GoiTap instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHuanLuyenVien(HuanLuyenVien instance);
    partial void UpdateHuanLuyenVien(HuanLuyenVien instance);
    partial void DeleteHuanLuyenVien(HuanLuyenVien instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLichSuBaoTri(LichSuBaoTri instance);
    partial void UpdateLichSuBaoTri(LichSuBaoTri instance);
    partial void DeleteLichSuBaoTri(LichSuBaoTri instance);
    partial void InsertLichTap(LichTap instance);
    partial void UpdateLichTap(LichTap instance);
    partial void DeleteLichTap(LichTap instance);
    partial void InsertLoaiHoaDon(LoaiHoaDon instance);
    partial void UpdateLoaiHoaDon(LoaiHoaDon instance);
    partial void DeleteLoaiHoaDon(LoaiHoaDon instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieuGiaHan(PhieuGiaHan instance);
    partial void UpdatePhieuGiaHan(PhieuGiaHan instance);
    partial void DeletePhieuGiaHan(PhieuGiaHan instance);
    partial void InsertPhongTap(PhongTap instance);
    partial void UpdatePhongTap(PhongTap instance);
    partial void DeletePhongTap(PhongTap instance);
    partial void InsertSuDungThietBi(SuDungThietBi instance);
    partial void UpdateSuDungThietBi(SuDungThietBi instance);
    partial void DeleteSuDungThietBi(SuDungThietBi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public QLPhongGymDataContext() : 
				base(global::DAMH_Nhom2_QLPhongGym.Properties.Settings.Default.QLPhongGymConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPhongGymDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this.GetTable<ChiTietHD>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
		
		public System.Data.Linq.Table<DangKyLichTap> DangKyLichTaps
		{
			get
			{
				return this.GetTable<DangKyLichTap>();
			}
		}
		
		public System.Data.Linq.Table<GoiTap> GoiTaps
		{
			get
			{
				return this.GetTable<GoiTap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HuanLuyenVien> HuanLuyenViens
		{
			get
			{
				return this.GetTable<HuanLuyenVien>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LichSuBaoTri> LichSuBaoTris
		{
			get
			{
				return this.GetTable<LichSuBaoTri>();
			}
		}
		
		public System.Data.Linq.Table<LichTap> LichTaps
		{
			get
			{
				return this.GetTable<LichTap>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHoaDon> LoaiHoaDons
		{
			get
			{
				return this.GetTable<LoaiHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuGiaHan> PhieuGiaHans
		{
			get
			{
				return this.GetTable<PhieuGiaHan>();
			}
		}
		
		public System.Data.Linq.Table<PhongTap> PhongTaps
		{
			get
			{
				return this.GetTable<PhongTap>();
			}
		}
		
		public System.Data.Linq.Table<SuDungThietBi> SuDungThietBis
		{
			get
			{
				return this.GetTable<SuDungThietBi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHD")]
	public partial class ChiTietHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoaDonID;
		
		private int _GoiTapID;
		
		private System.Nullable<int> _PhieuGiaHanID;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntityRef<GoiTap> _GoiTap;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<PhieuGiaHan> _PhieuGiaHan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoaDonIDChanging(int value);
    partial void OnHoaDonIDChanged();
    partial void OnGoiTapIDChanging(int value);
    partial void OnGoiTapIDChanged();
    partial void OnPhieuGiaHanIDChanging(System.Nullable<int> value);
    partial void OnPhieuGiaHanIDChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public ChiTietHD()
		{
			this._GoiTap = default(EntityRef<GoiTap>);
			this._HoaDon = default(EntityRef<HoaDon>);
			this._PhieuGiaHan = default(EntityRef<PhieuGiaHan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoaDonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HoaDonID
		{
			get
			{
				return this._HoaDonID;
			}
			set
			{
				if ((this._HoaDonID != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._HoaDonID = value;
					this.SendPropertyChanged("HoaDonID");
					this.OnHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					if (this._GoiTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuGiaHanID", DbType="Int")]
		public System.Nullable<int> PhieuGiaHanID
		{
			get
			{
				return this._PhieuGiaHanID;
			}
			set
			{
				if ((this._PhieuGiaHanID != value))
				{
					if (this._PhieuGiaHan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuGiaHanIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuGiaHanID = value;
					this.SendPropertyChanged("PhieuGiaHanID");
					this.OnPhieuGiaHanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_ChiTietHD", Storage="_GoiTap", ThisKey="GoiTapID", OtherKey="GoiTapID", IsForeignKey=true)]
		public GoiTap GoiTap
		{
			get
			{
				return this._GoiTap.Entity;
			}
			set
			{
				GoiTap previousValue = this._GoiTap.Entity;
				if (((previousValue != value) 
							|| (this._GoiTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoiTap.Entity = null;
						previousValue.ChiTietHDs.Remove(this);
					}
					this._GoiTap.Entity = value;
					if ((value != null))
					{
						value.ChiTietHDs.Add(this);
						this._GoiTapID = value.GoiTapID;
					}
					else
					{
						this._GoiTapID = default(int);
					}
					this.SendPropertyChanged("GoiTap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHD", Storage="_HoaDon", ThisKey="HoaDonID", OtherKey="HoaDonID", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHDs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHDs.Add(this);
						this._HoaDonID = value.HoaDonID;
					}
					else
					{
						this._HoaDonID = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuGiaHan_ChiTietHD", Storage="_PhieuGiaHan", ThisKey="PhieuGiaHanID", OtherKey="PhieuGiaHanID", IsForeignKey=true)]
		public PhieuGiaHan PhieuGiaHan
		{
			get
			{
				return this._PhieuGiaHan.Entity;
			}
			set
			{
				PhieuGiaHan previousValue = this._PhieuGiaHan.Entity;
				if (((previousValue != value) 
							|| (this._PhieuGiaHan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuGiaHan.Entity = null;
						previousValue.ChiTietHDs.Remove(this);
					}
					this._PhieuGiaHan.Entity = value;
					if ((value != null))
					{
						value.ChiTietHDs.Add(this);
						this._PhieuGiaHanID = value.PhieuGiaHanID;
					}
					else
					{
						this._PhieuGiaHanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuGiaHan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private string _TenThietBi;
		
		private System.Nullable<int> _PhongTapID;
		
		private string _MoTa;
		
		private string _TrangThai;
		
		private EntitySet<LichSuBaoTri> _LichSuBaoTris;
		
		private EntitySet<SuDungThietBi> _SuDungThietBis;
		
		private EntityRef<PhongTap> _PhongTap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnTenThietBiChanging(string value);
    partial void OnTenThietBiChanged();
    partial void OnPhongTapIDChanging(System.Nullable<int> value);
    partial void OnPhongTapIDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public ThietBi()
		{
			this._LichSuBaoTris = new EntitySet<LichSuBaoTri>(new Action<LichSuBaoTri>(this.attach_LichSuBaoTris), new Action<LichSuBaoTri>(this.detach_LichSuBaoTris));
			this._SuDungThietBis = new EntitySet<SuDungThietBi>(new Action<SuDungThietBi>(this.attach_SuDungThietBis), new Action<SuDungThietBi>(this.detach_SuDungThietBis));
			this._PhongTap = default(EntityRef<PhongTap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThietBi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenThietBi
		{
			get
			{
				return this._TenThietBi;
			}
			set
			{
				if ((this._TenThietBi != value))
				{
					this.OnTenThietBiChanging(value);
					this.SendPropertyChanging();
					this._TenThietBi = value;
					this.SendPropertyChanged("TenThietBi");
					this.OnTenThietBiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", DbType="Int")]
		public System.Nullable<int> PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					if (this._PhongTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_LichSuBaoTri", Storage="_LichSuBaoTris", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<LichSuBaoTri> LichSuBaoTris
		{
			get
			{
				return this._LichSuBaoTris;
			}
			set
			{
				this._LichSuBaoTris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_SuDungThietBi", Storage="_SuDungThietBis", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<SuDungThietBi> SuDungThietBis
		{
			get
			{
				return this._SuDungThietBis;
			}
			set
			{
				this._SuDungThietBis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_ThietBi", Storage="_PhongTap", ThisKey="PhongTapID", OtherKey="PhongTapID", IsForeignKey=true)]
		public PhongTap PhongTap
		{
			get
			{
				return this._PhongTap.Entity;
			}
			set
			{
				PhongTap previousValue = this._PhongTap.Entity;
				if (((previousValue != value) 
							|| (this._PhongTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTap.Entity = null;
						previousValue.ThietBis.Remove(this);
					}
					this._PhongTap.Entity = value;
					if ((value != null))
					{
						value.ThietBis.Add(this);
						this._PhongTapID = value.PhongTapID;
					}
					else
					{
						this._PhongTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongTap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichSuBaoTris(LichSuBaoTri entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_LichSuBaoTris(LichSuBaoTri entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
		
		private void attach_SuDungThietBis(SuDungThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_SuDungThietBis(SuDungThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKyLichTap")]
	public partial class DangKyLichTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DangKyHLV_ID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<int> _LichTapID;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LichTap> _LichTap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDangKyHLV_IDChanging(int value);
    partial void OnDangKyHLV_IDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnLichTapIDChanging(System.Nullable<int> value);
    partial void OnLichTapIDChanged();
    #endregion
		
		public DangKyLichTap()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LichTap = default(EntityRef<LichTap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangKyHLV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DangKyHLV_ID
		{
			get
			{
				return this._DangKyHLV_ID;
			}
			set
			{
				if ((this._DangKyHLV_ID != value))
				{
					this.OnDangKyHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._DangKyHLV_ID = value;
					this.SendPropertyChanged("DangKyHLV_ID");
					this.OnDangKyHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichTapID", DbType="Int")]
		public System.Nullable<int> LichTapID
		{
			get
			{
				return this._LichTapID;
			}
			set
			{
				if ((this._LichTapID != value))
				{
					if (this._LichTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLichTapIDChanging(value);
					this.SendPropertyChanging();
					this._LichTapID = value;
					this.SendPropertyChanged("LichTapID");
					this.OnLichTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DangKyLichTap", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DangKyLichTaps.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DangKyLichTaps.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichTap_DangKyLichTap", Storage="_LichTap", ThisKey="LichTapID", OtherKey="LichTapID", IsForeignKey=true)]
		public LichTap LichTap
		{
			get
			{
				return this._LichTap.Entity;
			}
			set
			{
				LichTap previousValue = this._LichTap.Entity;
				if (((previousValue != value) 
							|| (this._LichTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichTap.Entity = null;
						previousValue.DangKyLichTaps.Remove(this);
					}
					this._LichTap.Entity = value;
					if ((value != null))
					{
						value.DangKyLichTaps.Add(this);
						this._LichTapID = value.LichTapID;
					}
					else
					{
						this._LichTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LichTap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoiTap")]
	public partial class GoiTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoiTapID;
		
		private string _TenGoiTap;
		
		private System.Nullable<decimal> _GiaGoiTap;
		
		private EntitySet<ChiTietHD> _ChiTietHDs;
		
		private EntitySet<LichTap> _LichTaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoiTapIDChanging(int value);
    partial void OnGoiTapIDChanged();
    partial void OnTenGoiTapChanging(string value);
    partial void OnTenGoiTapChanged();
    partial void OnGiaGoiTapChanging(System.Nullable<decimal> value);
    partial void OnGiaGoiTapChanged();
    #endregion
		
		public GoiTap()
		{
			this._ChiTietHDs = new EntitySet<ChiTietHD>(new Action<ChiTietHD>(this.attach_ChiTietHDs), new Action<ChiTietHD>(this.detach_ChiTietHDs));
			this._LichTaps = new EntitySet<LichTap>(new Action<LichTap>(this.attach_LichTaps), new Action<LichTap>(this.detach_LichTaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGoiTap", DbType="NVarChar(100)")]
		public string TenGoiTap
		{
			get
			{
				return this._TenGoiTap;
			}
			set
			{
				if ((this._TenGoiTap != value))
				{
					this.OnTenGoiTapChanging(value);
					this.SendPropertyChanging();
					this._TenGoiTap = value;
					this.SendPropertyChanged("TenGoiTap");
					this.OnTenGoiTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaGoiTap", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaGoiTap
		{
			get
			{
				return this._GiaGoiTap;
			}
			set
			{
				if ((this._GiaGoiTap != value))
				{
					this.OnGiaGoiTapChanging(value);
					this.SendPropertyChanging();
					this._GiaGoiTap = value;
					this.SendPropertyChanged("GiaGoiTap");
					this.OnGiaGoiTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_ChiTietHD", Storage="_ChiTietHDs", ThisKey="GoiTapID", OtherKey="GoiTapID")]
		public EntitySet<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this._ChiTietHDs;
			}
			set
			{
				this._ChiTietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_LichTap", Storage="_LichTaps", ThisKey="GoiTapID", OtherKey="GoiTapID")]
		public EntitySet<LichTap> LichTaps
		{
			get
			{
				return this._LichTaps;
			}
			set
			{
				this._LichTaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = this;
		}
		
		private void detach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = null;
		}
		
		private void attach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = this;
		}
		
		private void detach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.GoiTap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoaDonID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private System.Nullable<int> _LoaiHoaDonID;
		
		private EntitySet<ChiTietHD> _ChiTietHDs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LoaiHoaDon> _LoaiHoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoaDonIDChanging(int value);
    partial void OnHoaDonIDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnLoaiHoaDonIDChanging(System.Nullable<int> value);
    partial void OnLoaiHoaDonIDChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHDs = new EntitySet<ChiTietHD>(new Action<ChiTietHD>(this.attach_ChiTietHDs), new Action<ChiTietHD>(this.detach_ChiTietHDs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LoaiHoaDon = default(EntityRef<LoaiHoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoaDonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HoaDonID
		{
			get
			{
				return this._HoaDonID;
			}
			set
			{
				if ((this._HoaDonID != value))
				{
					this.OnHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._HoaDonID = value;
					this.SendPropertyChanged("HoaDonID");
					this.OnHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHoaDonID", DbType="Int")]
		public System.Nullable<int> LoaiHoaDonID
		{
			get
			{
				return this._LoaiHoaDonID;
			}
			set
			{
				if ((this._LoaiHoaDonID != value))
				{
					if (this._LoaiHoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiHoaDonID = value;
					this.SendPropertyChanged("LoaiHoaDonID");
					this.OnLoaiHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHD", Storage="_ChiTietHDs", ThisKey="HoaDonID", OtherKey="HoaDonID")]
		public EntitySet<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this._ChiTietHDs;
			}
			set
			{
				this._ChiTietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoaDon_HoaDon", Storage="_LoaiHoaDon", ThisKey="LoaiHoaDonID", OtherKey="LoaiHoaDonID", IsForeignKey=true)]
		public LoaiHoaDon LoaiHoaDon
		{
			get
			{
				return this._LoaiHoaDon.Entity;
			}
			set
			{
				LoaiHoaDon previousValue = this._LoaiHoaDon.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHoaDon.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._LoaiHoaDon.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._LoaiHoaDonID = value.LoaiHoaDonID;
					}
					else
					{
						this._LoaiHoaDonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HuanLuyenVien")]
	public partial class HuanLuyenVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HLV_ID;
		
		private System.Nullable<int> _NhanVienID;
		
		private string _HoTen;
		
		private string _ChuyenMon;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<LichTap> _LichTaps;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHLV_IDChanging(int value);
    partial void OnHLV_IDChanged();
    partial void OnNhanVienIDChanging(System.Nullable<int> value);
    partial void OnNhanVienIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChuyenMonChanging(string value);
    partial void OnChuyenMonChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public HuanLuyenVien()
		{
			this._LichTaps = new EntitySet<LichTap>(new Action<LichTap>(this.attach_LichTaps), new Action<LichTap>(this.detach_LichTaps));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="Int")]
		public System.Nullable<int> NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuyenMon", DbType="NVarChar(100)")]
		public string ChuyenMon
		{
			get
			{
				return this._ChuyenMon;
			}
			set
			{
				if ((this._ChuyenMon != value))
				{
					this.OnChuyenMonChanging(value);
					this.SendPropertyChanging();
					this._ChuyenMon = value;
					this.SendPropertyChanged("ChuyenMon");
					this.OnChuyenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LichTap", Storage="_LichTaps", ThisKey="HLV_ID", OtherKey="HLV_ID")]
		public EntitySet<LichTap> LichTaps
		{
			get
			{
				return this._LichTaps;
			}
			set
			{
				this._LichTaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HuanLuyenVien", Storage="_NhanVien", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HuanLuyenViens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HuanLuyenViens.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = this;
		}
		
		private void detach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.HuanLuyenVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhachHangID;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _LoaiTheThanhVien;
		
		private System.Nullable<int> _ThoiGianHieuLuc;
		
		private EntitySet<DangKyLichTap> _DangKyLichTaps;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<PhieuGiaHan> _PhieuGiaHans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhachHangIDChanging(int value);
    partial void OnKhachHangIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnLoaiTheThanhVienChanging(string value);
    partial void OnLoaiTheThanhVienChanged();
    partial void OnThoiGianHieuLucChanging(System.Nullable<int> value);
    partial void OnThoiGianHieuLucChanged();
    #endregion
		
		public KhachHang()
		{
			this._DangKyLichTaps = new EntitySet<DangKyLichTap>(new Action<DangKyLichTap>(this.attach_DangKyLichTaps), new Action<DangKyLichTap>(this.detach_DangKyLichTaps));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._PhieuGiaHans = new EntitySet<PhieuGiaHan>(new Action<PhieuGiaHan>(this.attach_PhieuGiaHans), new Action<PhieuGiaHan>(this.detach_PhieuGiaHans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTheThanhVien", DbType="NVarChar(50)")]
		public string LoaiTheThanhVien
		{
			get
			{
				return this._LoaiTheThanhVien;
			}
			set
			{
				if ((this._LoaiTheThanhVien != value))
				{
					this.OnLoaiTheThanhVienChanging(value);
					this.SendPropertyChanging();
					this._LoaiTheThanhVien = value;
					this.SendPropertyChanged("LoaiTheThanhVien");
					this.OnLoaiTheThanhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianHieuLuc", DbType="Int")]
		public System.Nullable<int> ThoiGianHieuLuc
		{
			get
			{
				return this._ThoiGianHieuLuc;
			}
			set
			{
				if ((this._ThoiGianHieuLuc != value))
				{
					this.OnThoiGianHieuLucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianHieuLuc = value;
					this.SendPropertyChanged("ThoiGianHieuLuc");
					this.OnThoiGianHieuLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DangKyLichTap", Storage="_DangKyLichTaps", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<DangKyLichTap> DangKyLichTaps
		{
			get
			{
				return this._DangKyLichTaps;
			}
			set
			{
				this._DangKyLichTaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuGiaHan", Storage="_PhieuGiaHans", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<PhieuGiaHan> PhieuGiaHans
		{
			get
			{
				return this._PhieuGiaHans;
			}
			set
			{
				this._PhieuGiaHans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyLichTaps(DangKyLichTap entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DangKyLichTaps(DangKyLichTap entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhieuGiaHans(PhieuGiaHan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuGiaHans(PhieuGiaHan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuBaoTri")]
	public partial class LichSuBaoTri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BaoTriID;
		
		private System.Nullable<int> _ThietBiID;
		
		private System.Nullable<System.DateTime> _NgayBaoTri;
		
		private string _MoTa;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaoTriIDChanging(int value);
    partial void OnBaoTriIDChanged();
    partial void OnThietBiIDChanging(System.Nullable<int> value);
    partial void OnThietBiIDChanged();
    partial void OnNgayBaoTriChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBaoTriChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LichSuBaoTri()
		{
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoTriID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BaoTriID
		{
			get
			{
				return this._BaoTriID;
			}
			set
			{
				if ((this._BaoTriID != value))
				{
					this.OnBaoTriIDChanging(value);
					this.SendPropertyChanging();
					this._BaoTriID = value;
					this.SendPropertyChanged("BaoTriID");
					this.OnBaoTriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", DbType="Int")]
		public System.Nullable<int> ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBaoTri", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBaoTri
		{
			get
			{
				return this._NgayBaoTri;
			}
			set
			{
				if ((this._NgayBaoTri != value))
				{
					this.OnNgayBaoTriChanging(value);
					this.SendPropertyChanging();
					this._NgayBaoTri = value;
					this.SendPropertyChanged("NgayBaoTri");
					this.OnNgayBaoTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_LichSuBaoTri", Storage="_ThietBi", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.LichSuBaoTris.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.LichSuBaoTris.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichTap")]
	public partial class LichTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LichTapID;
		
		private System.Nullable<int> _HLV_ID;
		
		private System.Nullable<int> _PhongTapID;
		
		private System.Nullable<int> _GoiTapID;
		
		private System.Nullable<System.DateTime> _NgayHoc;
		
		private System.Nullable<System.TimeSpan> _ThoiGianBatDau;
		
		private System.Nullable<System.TimeSpan> _ThoiGianKetThuc;
		
		private string _TrangThai;
		
		private EntitySet<DangKyLichTap> _DangKyLichTaps;
		
		private EntityRef<GoiTap> _GoiTap;
		
		private EntityRef<HuanLuyenVien> _HuanLuyenVien;
		
		private EntityRef<PhongTap> _PhongTap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLichTapIDChanging(int value);
    partial void OnLichTapIDChanged();
    partial void OnHLV_IDChanging(System.Nullable<int> value);
    partial void OnHLV_IDChanged();
    partial void OnPhongTapIDChanging(System.Nullable<int> value);
    partial void OnPhongTapIDChanged();
    partial void OnGoiTapIDChanging(System.Nullable<int> value);
    partial void OnGoiTapIDChanged();
    partial void OnNgayHocChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHocChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianKetThucChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public LichTap()
		{
			this._DangKyLichTaps = new EntitySet<DangKyLichTap>(new Action<DangKyLichTap>(this.attach_DangKyLichTaps), new Action<DangKyLichTap>(this.detach_DangKyLichTaps));
			this._GoiTap = default(EntityRef<GoiTap>);
			this._HuanLuyenVien = default(EntityRef<HuanLuyenVien>);
			this._PhongTap = default(EntityRef<PhongTap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichTapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LichTapID
		{
			get
			{
				return this._LichTapID;
			}
			set
			{
				if ((this._LichTapID != value))
				{
					this.OnLichTapIDChanging(value);
					this.SendPropertyChanging();
					this._LichTapID = value;
					this.SendPropertyChanged("LichTapID");
					this.OnLichTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLV_ID", DbType="Int")]
		public System.Nullable<int> HLV_ID
		{
			get
			{
				return this._HLV_ID;
			}
			set
			{
				if ((this._HLV_ID != value))
				{
					if (this._HuanLuyenVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHLV_IDChanging(value);
					this.SendPropertyChanging();
					this._HLV_ID = value;
					this.SendPropertyChanged("HLV_ID");
					this.OnHLV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", DbType="Int")]
		public System.Nullable<int> PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					if (this._PhongTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiTapID", DbType="Int")]
		public System.Nullable<int> GoiTapID
		{
			get
			{
				return this._GoiTapID;
			}
			set
			{
				if ((this._GoiTapID != value))
				{
					if (this._GoiTap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoiTapIDChanging(value);
					this.SendPropertyChanging();
					this._GoiTapID = value;
					this.SendPropertyChanged("GoiTapID");
					this.OnGoiTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHoc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHoc
		{
			get
			{
				return this._NgayHoc;
			}
			set
			{
				if ((this._NgayHoc != value))
				{
					this.OnNgayHocChanging(value);
					this.SendPropertyChanging();
					this._NgayHoc = value;
					this.SendPropertyChanged("NgayHoc");
					this.OnNgayHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichTap_DangKyLichTap", Storage="_DangKyLichTaps", ThisKey="LichTapID", OtherKey="LichTapID")]
		public EntitySet<DangKyLichTap> DangKyLichTaps
		{
			get
			{
				return this._DangKyLichTaps;
			}
			set
			{
				this._DangKyLichTaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoiTap_LichTap", Storage="_GoiTap", ThisKey="GoiTapID", OtherKey="GoiTapID", IsForeignKey=true)]
		public GoiTap GoiTap
		{
			get
			{
				return this._GoiTap.Entity;
			}
			set
			{
				GoiTap previousValue = this._GoiTap.Entity;
				if (((previousValue != value) 
							|| (this._GoiTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoiTap.Entity = null;
						previousValue.LichTaps.Remove(this);
					}
					this._GoiTap.Entity = value;
					if ((value != null))
					{
						value.LichTaps.Add(this);
						this._GoiTapID = value.GoiTapID;
					}
					else
					{
						this._GoiTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GoiTap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HuanLuyenVien_LichTap", Storage="_HuanLuyenVien", ThisKey="HLV_ID", OtherKey="HLV_ID", IsForeignKey=true)]
		public HuanLuyenVien HuanLuyenVien
		{
			get
			{
				return this._HuanLuyenVien.Entity;
			}
			set
			{
				HuanLuyenVien previousValue = this._HuanLuyenVien.Entity;
				if (((previousValue != value) 
							|| (this._HuanLuyenVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HuanLuyenVien.Entity = null;
						previousValue.LichTaps.Remove(this);
					}
					this._HuanLuyenVien.Entity = value;
					if ((value != null))
					{
						value.LichTaps.Add(this);
						this._HLV_ID = value.HLV_ID;
					}
					else
					{
						this._HLV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HuanLuyenVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_LichTap", Storage="_PhongTap", ThisKey="PhongTapID", OtherKey="PhongTapID", IsForeignKey=true)]
		public PhongTap PhongTap
		{
			get
			{
				return this._PhongTap.Entity;
			}
			set
			{
				PhongTap previousValue = this._PhongTap.Entity;
				if (((previousValue != value) 
							|| (this._PhongTap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTap.Entity = null;
						previousValue.LichTaps.Remove(this);
					}
					this._PhongTap.Entity = value;
					if ((value != null))
					{
						value.LichTaps.Add(this);
						this._PhongTapID = value.PhongTapID;
					}
					else
					{
						this._PhongTapID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongTap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyLichTaps(DangKyLichTap entity)
		{
			this.SendPropertyChanging();
			entity.LichTap = this;
		}
		
		private void detach_DangKyLichTaps(DangKyLichTap entity)
		{
			this.SendPropertyChanging();
			entity.LichTap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHoaDon")]
	public partial class LoaiHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiHoaDonID;
		
		private string _TenLoai;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiHoaDonIDChanging(int value);
    partial void OnLoaiHoaDonIDChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiHoaDon()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHoaDonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiHoaDonID
		{
			get
			{
				return this._LoaiHoaDonID;
			}
			set
			{
				if ((this._LoaiHoaDonID != value))
				{
					this.OnLoaiHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiHoaDonID = value;
					this.SendPropertyChanged("LoaiHoaDonID");
					this.OnLoaiHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(100)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoaDon_HoaDon", Storage="_HoaDons", ThisKey="LoaiHoaDonID", OtherKey="LoaiHoaDonID")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoaDon = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhanVienID;
		
		private string _HoTen;
		
		private string _ChucVu;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _NgayVaoLam;
		
		private EntitySet<HuanLuyenVien> _HuanLuyenViens;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(int value);
    partial void OnNhanVienIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayVaoLamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVaoLamChanged();
    #endregion
		
		public NhanVien()
		{
			this._HuanLuyenViens = new EntitySet<HuanLuyenVien>(new Action<HuanLuyenVien>(this.attach_HuanLuyenViens), new Action<HuanLuyenVien>(this.detach_HuanLuyenViens));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVaoLam", DbType="Date")]
		public System.Nullable<System.DateTime> NgayVaoLam
		{
			get
			{
				return this._NgayVaoLam;
			}
			set
			{
				if ((this._NgayVaoLam != value))
				{
					this.OnNgayVaoLamChanging(value);
					this.SendPropertyChanging();
					this._NgayVaoLam = value;
					this.SendPropertyChanged("NgayVaoLam");
					this.OnNgayVaoLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HuanLuyenVien", Storage="_HuanLuyenViens", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<HuanLuyenVien> HuanLuyenViens
		{
			get
			{
				return this._HuanLuyenViens;
			}
			set
			{
				this._HuanLuyenViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HuanLuyenViens(HuanLuyenVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HuanLuyenViens(HuanLuyenVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuGiaHan")]
	public partial class PhieuGiaHan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhieuGiaHanID;
		
		private System.Nullable<int> _KhachHangID;
		
		private System.Nullable<int> _ThoiGianGiaHan;
		
		private EntitySet<ChiTietHD> _ChiTietHDs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuGiaHanIDChanging(int value);
    partial void OnPhieuGiaHanIDChanged();
    partial void OnKhachHangIDChanging(System.Nullable<int> value);
    partial void OnKhachHangIDChanged();
    partial void OnThoiGianGiaHanChanging(System.Nullable<int> value);
    partial void OnThoiGianGiaHanChanged();
    #endregion
		
		public PhieuGiaHan()
		{
			this._ChiTietHDs = new EntitySet<ChiTietHD>(new Action<ChiTietHD>(this.attach_ChiTietHDs), new Action<ChiTietHD>(this.detach_ChiTietHDs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuGiaHanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhieuGiaHanID
		{
			get
			{
				return this._PhieuGiaHanID;
			}
			set
			{
				if ((this._PhieuGiaHanID != value))
				{
					this.OnPhieuGiaHanIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuGiaHanID = value;
					this.SendPropertyChanged("PhieuGiaHanID");
					this.OnPhieuGiaHanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="Int")]
		public System.Nullable<int> KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianGiaHan", DbType="Int")]
		public System.Nullable<int> ThoiGianGiaHan
		{
			get
			{
				return this._ThoiGianGiaHan;
			}
			set
			{
				if ((this._ThoiGianGiaHan != value))
				{
					this.OnThoiGianGiaHanChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianGiaHan = value;
					this.SendPropertyChanged("ThoiGianGiaHan");
					this.OnThoiGianGiaHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuGiaHan_ChiTietHD", Storage="_ChiTietHDs", ThisKey="PhieuGiaHanID", OtherKey="PhieuGiaHanID")]
		public EntitySet<ChiTietHD> ChiTietHDs
		{
			get
			{
				return this._ChiTietHDs;
			}
			set
			{
				this._ChiTietHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuGiaHan", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuGiaHans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuGiaHans.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.PhieuGiaHan = this;
		}
		
		private void detach_ChiTietHDs(ChiTietHD entity)
		{
			this.SendPropertyChanging();
			entity.PhieuGiaHan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongTap")]
	public partial class PhongTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhongTapID;
		
		private string _TenPhong;
		
		private string _MoTa;
		
		private EntitySet<ThietBi> _ThietBis;
		
		private EntitySet<LichTap> _LichTaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhongTapIDChanging(int value);
    partial void OnPhongTapIDChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public PhongTap()
		{
			this._ThietBis = new EntitySet<ThietBi>(new Action<ThietBi>(this.attach_ThietBis), new Action<ThietBi>(this.detach_ThietBis));
			this._LichTaps = new EntitySet<LichTap>(new Action<LichTap>(this.attach_LichTaps), new Action<LichTap>(this.detach_LichTaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongTapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhongTapID
		{
			get
			{
				return this._PhongTapID;
			}
			set
			{
				if ((this._PhongTapID != value))
				{
					this.OnPhongTapIDChanging(value);
					this.SendPropertyChanging();
					this._PhongTapID = value;
					this.SendPropertyChanged("PhongTapID");
					this.OnPhongTapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(100)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_ThietBi", Storage="_ThietBis", ThisKey="PhongTapID", OtherKey="PhongTapID")]
		public EntitySet<ThietBi> ThietBis
		{
			get
			{
				return this._ThietBis;
			}
			set
			{
				this._ThietBis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTap_LichTap", Storage="_LichTaps", ThisKey="PhongTapID", OtherKey="PhongTapID")]
		public EntitySet<LichTap> LichTaps
		{
			get
			{
				return this._LichTaps;
			}
			set
			{
				this._LichTaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = this;
		}
		
		private void detach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = null;
		}
		
		private void attach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = this;
		}
		
		private void detach_LichTaps(LichTap entity)
		{
			this.SendPropertyChanging();
			entity.PhongTap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuDungThietBi")]
	public partial class SuDungThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuDungID;
		
		private System.Nullable<int> _ThietBiID;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuDungIDChanging(int value);
    partial void OnSuDungIDChanged();
    partial void OnThietBiIDChanging(System.Nullable<int> value);
    partial void OnThietBiIDChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public SuDungThietBi()
		{
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuDungID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SuDungID
		{
			get
			{
				return this._SuDungID;
			}
			set
			{
				if ((this._SuDungID != value))
				{
					this.OnSuDungIDChanging(value);
					this.SendPropertyChanging();
					this._SuDungID = value;
					this.SendPropertyChanged("SuDungID");
					this.OnSuDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThietBiID", DbType="Int")]
		public System.Nullable<int> ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_SuDungThietBi", Storage="_ThietBi", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.SuDungThietBis.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.SuDungThietBis.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaiKhoanID;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private System.Nullable<int> _NhanVienID;
		
		private string _Quyen;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNhanVienIDChanging(System.Nullable<int> value);
    partial void OnNhanVienIDChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="Int")]
		public System.Nullable<int> NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
